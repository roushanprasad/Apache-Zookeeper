#Pre Requisites : 
1) Java 1.8 or higher Setup
There are two ways to do this: 
A) MANUAL SETUP
B) AUTO INSTALL (Using apt install)
Both the methods are described as below: 

A) MANUAL SETUP OF JDK 1.8 -----------------------------------------------------
Download JDK:  
Download JDK 1.8 from the below link and extract it to a location with appropriate permissions, say '/user/java/jdk1.8'
Create the directory (if not already exists)
Download Link -> https://www.java.com/en/download/help/linux_x64_install.xml

Alternate Paths: 
Use the below alternate path commands to setup the alternate path for the jdk:
For Java, Java Compiler and Java Web Start respectively: 
>sudo update-alternatives --install "/usr/bin/java" "java" "/usr/java/jdk1.8.0_152/bin/java" 1
>sudo update-alternatives --install "/usr/bin/javac" "javac" "/usr/java/jdk1.8.0_152/bin/javac" 1
>sudo update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/java/jdk1.8.0_152/bin/javaws" 1

Please note that the locations: 
/usr/bin/java
/usr/bin/javac
/usr/bin/javaws
are fixed in the command, you only need to change the location that is mentioned in the later part of the command. 
These locations at the later part in the command are the actual location where you have extracted the jdk.

Modify the .bashrc file: 
You can do it either with your current user or with root user. I suggest to do it with root user.
Type the below command when you are root user
>gedit ~/.bashrc

Then add the below lines to the end of the bashrc file 

#JAVA HOME directory setup
export JAVA_HOME=/usr/lib/java/jdk1.8.0_152
export PATH="$PATH:$JAVA_HOME/bin"

Save and close the bashrc file and cource the bashrc file with the below command: 
>source .bashrc

There you are. You have completed the manual installation of JDK 1.8 in linux (ubuntu)
--------------------------------------------------------------------------------------------------------------------
B.AUTO INSTALL (Using apt install) -----------------------------------------------------------
Type the below command on your terminal to get jdk 1.8 installed automatically in your linux.
>sudo apt-get install python-software-properties
>sudo add-apt-repository ppa:webupd8team/java
>sudo apt-get update
>sudo apt-get install oracle-java8-installer

Done!
---------------------------------------------------------------------------------------------------------------------

==================================== ZOOKEEPER STANDALONE SETUP =====================================================
Step 1: DOwnload and unzip zookeeper; Extract to a directory say '/home/roushan/installs/zookeeper-3.4.11/'
Download Link -> http://www.apache.org/dyn/closer.cgi/zookeeper/

step 2: Goto Home Directory and open the bashrc file using below command and add the Zookeper home path
>gedit .bashrc

Add the below line to the end of bashrc file

export ZK_HOME=$HOME/roushan/installs/zookeeper-3.4.11

step 3: Now go to 'conf' directory of zookper, you can also use the below command to go there
>cd $ZK_HOME/conf

step 4: Create the config file say 'zoo.config'. You can use the below command for the same.
> touch zoo.cfg

step 5: Once file is created, open in gedit and add the below lines. Used the below command to open in gedit: 
> gedit zoo.cfg

In the zoo.cfg opened, add the following lines:

tickTime=2000
dataDir=/tmp/zookeeper
clientPort=2181

Save and close zoo.cfg.

step 6: Go back to the ZooKeeper home directory and start the zookeeper server.
> cd $ZK_HOME
> bin/zkServer.sh start

Run the following command to check the java process running:
> jps
(Note: If you are unable to run the jps command, install the open jdk1.8 using the sudo apt install <package> command as suggested by linux on the terminal)

Run the following command to check the status of zookeeper:
> bin/zkServer.sh status

Run the following command to stop the zookeeper:
> bin/zkServer.sh stop
==============================================================================================================================

=================================== ZOOKEEPER MULTI NODE CLUSTER INSTALLATION ================================================
Once the zookeper is setup in each machine using above steps, follow the below steps for cluster setup.

Step 1: Get the ip address of each node and assign unique id to each unix box/vm

Here say we have two vm/unix machines each having ip address as below: 
192.168.81.130
192.168.81.131

Lets assign a unique ID to each computer (ID taken from 1 to 255), say, 
we assign 192.168.81.130 with id = 1, and assign 192.168.81.131 with id = 2. 

Step 2: Creation of 'myid' file in dataDir
Log into the terminal of each computer, 
create a "zookeeper" folder under /var directory (/var/zookeeper/) and 
create a myid file in it that shall contain the unique id assigned to the computer, by running the following commands:

> cd /var
> sudo mkdir zookeeper
> sudo chmod -R 777 zookeeper
> cd zookeeper
> sudo touch myid
> sudo gedit myid

In the myid opened, put the unique id and save the file. For example the content of myid file on 192.168.81.130 is

1

and the content of myid file on 192.168.81.131 is 

2

Step 3: Now navigate to the ZK_HOME directory on each computer and update the zoo.cfg in the conf sub-directory, by running the following commnads:
> cd $ZK_HOME
> cd conf
> gedit zoo.cfg

In the zoo.cfg file, write the following as its content:

tickTime=2000
dataDir=/var/zookeeper
clientPort=2181
initLimit=5
syncLimit=2
server.1=192.168.1.12:2888:3888  //Basically here the ip:peerPort:leaderPort of machine 1
server.2=192.168.1.13:2888:3888  //Basically here the ip:peerPort:leaderPort of machine 2


//Note: the above list includes all the servers including the one in which the zoo.cfg file resides
//Here server parameter is in the form
Server.X=hostname/ip:peerPort:leaderPort
where
X -> Server Unique id
ip -> host/ip of each machine 
peerPort -> TCP port over which servers in ensemble communicate with each other
leaderPort -> TCP port over which leader election is performed

Now Save and close the zoo.cfg file.

Step 4: Run start the zookeeper on each computer by running the following commands in their terminal:

> cd $ZK_HOME
> bin/zkServer.sh start

To check the status of the zookeeper cluster, type the following command in each computers' terminal:
> cd $ZK_HOME
> bin/zkServer.sh status

To stop a zookeeper on a computer, run the following command:
> cd $ZK_HOME
> bin/zkServer.sh stop


///----- COmmon Problems ----////
Problem 1: Error contacting service. It is probably not running.

When this message appeared, it may be because one of t8he computer is not connected to the network (e.g. the ethernet cable is loose). In this case, try to ping each computer to see if they are connected.

Another caution is to make sure the the /var/zookeeper folder on each computer has write permission (e.g. by running the "sudo chmod -R 777 /var/zookeeper" command in the terminal)

--- Problem 1 Solution for VMs: 
Go to VM Setting --> Go to Netwok Adapter Setting --> In 'Network Connection' section select 'Bridged: Connection directly to the physical network' 
Also
Check the check box for : Replication physical network connection sate

Do this for all VMs and there you are done. Vola!
------------
Note : The ip for every VM changes, hence everytime you start a VM, you may need to change the ip for each zookeeper server/vm in zoo.cfg in each vm. 
I have not tried, but you can assign the static ip to each vm and get rid of this problem also.
==================================================================================================================================
